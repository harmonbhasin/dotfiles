# act like GNU screen
unbind C-b
set -g prefix C-a

# C-a C-a for the last active window
bind-key C-a last-window

# Start window numbering at 1
set -g base-index 1

# Set escape time to 0
# set -s escape-time 0

# Set status bar
#set -g status-bg black
#set -g status-fg white
#set -g status-left ""
#set -g status-right "#[fg=green]#H"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
#bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
# set-window-option -g window-status-current-bg red

# try to get fonts and colors working
set-option -g default-terminal "tmux-256color"
# set-option -sa terminal-overrides ',XXX:RGB'
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# soften status bar color from harsh green to light gray
#set -g status-bg '#666666'
#set -g status-fg '#aaaaaa'

# Recommended by neovim health check
set-option -g focus-events on

# Open new windows in current directory
bind c new-window -c '#{pane_current_path}'

# Reduce escape time for neovim
set -sg escape-time 10

# Use vi keybindings in copy mode
set-window-option -g mode-keys vi
# See https://github.com/tmux/tmux/issues/592 and https://wiki.archlinux.org/index.php/Tmux#X_clipboard_integration
# The following commands make it so that in copy mode v starts selection and y
# copies selection into system clipboard, and in regular mode Prefix + p pastes
# from system clipboard.
# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
# TODO: fix this for mac; currently it causes issues

# Window splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# reload config
# see https://devel.tech/tips/n/tMuXm4vP/reloading-config-from-inside-tmux/
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded."

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Also see https://github.com/tmux/tmux/issues/1827 for fix for C-\ binding
# Also see https://www.bugsnag.com/blog/tmux-and-vim for ways to extend logic
# Also see https://github.com/alexghergh/nvim-tmux-navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
# bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
